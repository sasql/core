{
    "compilerOptions": {
        /* Language and Environment */
        "target": "ES2020",
        // "lib": [], /* Specify a set of bundled library declaration files that describe the target runtime environment. */
        // "useDefineForClassFields": true, /* Emit ECMAScript-standard-compliant class fields. */
        // "moduleDetection": "auto", /* Control what method is used to detect module-format JS files. */
        /* Modules */
        "module": "ESNext", /* Specify what module code is generated. */
        "moduleResolution": "node", /* Specify how TypeScript looks up a file from a given module specifier. */
        "types": [
            "jest",
            "node"
        ],
        // "allowUmdGlobalAccess": true,                     /* Allow accessing UMD globals from modules. */
        // "customConditions": [],                           /* Conditions to set in addition to the resolver-specific defaults when resolving imports. */
        // "noUncheckedSideEffectImports": true,             /* Check side effect imports. */
        /* Emit */
        "declaration": true, /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
        "declarationMap": true, /* Create sourcemaps for d.ts files. */
        "sourceMap": true, /* Create source map files for emitted JavaScript files. */
        "outDir": "./dist", /* Specify an output folder for all emitted files. */
        "removeComments": true, /* Disable emitting comments. */
        // "importHelpers": true, /* Allow importing helper functions from tslib once per project, instead of including them per-file. */
        // "stripInternal": true, /* Disable emitting declarations that have '@internal' in their JSDoc comments. */
        /* Interop Constraints */
        "allowSyntheticDefaultImports": true, /* Allow 'import x from y' when a module doesn't have a default export. */
        "esModuleInterop": true, /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
        // "preserveSymlinks": true, /* Disable resolving symlinks to their realpath. This correlates to the same flag in node. */
        "forceConsistentCasingInFileNames": true, /* Ensure that casing is correct in imports. */
        /* Type Checking */
        "strict": true, /* Enable all strict type-checking options. */
        "strictNullChecks": true, /* When type checking, take into account 'null' and 'undefined'. */
        "strictFunctionTypes": true, /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
        "strictBindCallApply": true, /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
        "strictPropertyInitialization": true, /* Check for class properties that are declared but not set in the constructor. */
        "strictBuiltinIteratorReturn": true, /* Built-in iterators are instantiated with a 'TReturn' type of 'undefined' instead of 'any'. */
        "useUnknownInCatchVariables": false, /* Default catch clause variables as 'unknown' instead of 'any'. */
        "alwaysStrict": true, /* Ensure 'use strict' is always emitted. */
        "noUnusedLocals": true, /* Enable error reporting when local variables aren't read. */
        "noUnusedParameters": true, /* Raise an error when a function parameter isn't read. */
        "noImplicitReturns": true, /* Enable error reporting for codepaths that do not explicitly return in a function. */
        "noFallthroughCasesInSwitch": true, /* Enable error reporting for fallthrough cases in switch statements. */
        "noUncheckedIndexedAccess": true, /* Add 'undefined' to a type when accessed using an index. */
        "noImplicitOverride": true, /* Ensure overriding members in derived classes are marked with an override modifier. */
        "noPropertyAccessFromIndexSignature": true, /* Enforces using indexed accessors for keys declared using an indexed type. */
        "allowUnreachableCode": false, /* Disable error reporting for unreachable code. */
        /* Completeness */
        "skipDefaultLibCheck": true, /* Skip type checking .d.ts files that are included with TypeScript. */
        "skipLibCheck": true /* Skip type checking all .d.ts files. */
    },
    "include": [
        "src"
    ]
}